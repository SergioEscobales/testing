{"ast":null,"code":"var _jsxFileName = \"/Users/sergio/Documents/GitHub/testing/src/VoiceFavs.js\";\nimport React from \"react\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport Container from \"@material-ui/core/Container\";\nimport './components/styles.css';\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport TextField from \"@material-ui/core/TextField\";\nimport SearchIcon from '@material-ui/icons/Search';\nexport default class VoiceFavs extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      voices: [],\n      addToFav: false,\n      favorites: [],\n      tags: '',\n      favState: false,\n      randomFav: null\n    };\n\n    this.onToggle = addToFav => {\n      this.setState({\n        addToFav\n      });\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"json/voices2.json\").then(response => response.json()).then(datos => {\n      this.setState({\n        voices: datos\n      });\n    });\n    return this.state.voices;\n  }\n\n  render() {\n    function remove(e) {\n      const element = e.target;\n      element.remove(e);\n    }\n\n    function removeFavs() {\n      let elem = document.getElementById('favs-row');\n      elem.parentNode.removeChild(elem);\n      return false;\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"header-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"free-solo-2-demo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Autocomplete, {\n      id: \"combo-box-demo\",\n      autoComplete: true,\n      options: this.state.voices.map(option => option.name),\n      style: {\n        width: 300,\n        backgroundColor: '#000000'\n      },\n      includeInputInList: true,\n      size: \"small\",\n      renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n        label: /*#__PURE__*/React.createElement(SearchIcon, {\n          style: {\n            color: 'darkgrey'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 55\n          }\n        }),\n        variant: \"outlined\",\n        InputProps: { ...params.InputProps,\n          type: 'search'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 37\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"fav-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }\n    }, \"FAVOURITES VOICES\"), this.props.list.map(datos => /*#__PURE__*/React.createElement(Row, {\n      className: \"voices-favs-list\",\n      id: \"favs-row\",\n      onClick: remove,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: true,\n      lg: \"2\",\n      key: datos.name,\n      id: \"voices-favs-list\",\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      className: \"col-sm-3 card-list\",\n      id: \"card-icon-image\",\n      key: datos.id,\n      style: {\n        listStyleType: 'none'\n      },\n      onClick: removeFavs,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"card-img-list\",\n      src: `${process.env.PUBLIC_URL}/imagenes/${datos.icon}`,\n      alt: datos.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        marginTop: '1rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 37\n      }\n    }, datos.name)))))), /*#__PURE__*/React.createElement(Container, {\n      className: \"container-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"pro-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 25\n      }\n    }, \"PRO VOICES\"), this.state.voices.map(datos => /*#__PURE__*/React.createElement(Col, {\n      xs: true,\n      lg: \"2\",\n      key: datos.id,\n      className: \"col-sm-3 voices-list\",\n      align: \"center\",\n      onClick: () => this.props.clicked(datos),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-list\",\n      onSelect: this.onSelect,\n      id: \"card-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"card-fav-img\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"img\", {\n      onToggle: this.onToggle,\n      alt: datos.name,\n      className: \"card-img-list\" //onClick={() => this.props.clicked(datos)}\n      ,\n      src: `${process.env.PUBLIC_URL}/imagenes/${datos.icon}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        marginTop: '1rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 37\n      }\n    }, datos.name)))))));\n  }\n\n}","map":{"version":3,"sources":["/Users/sergio/Documents/GitHub/testing/src/VoiceFavs.js"],"names":["React","Col","Row","Container","Autocomplete","TextField","SearchIcon","VoiceFavs","Component","constructor","props","state","voices","addToFav","favorites","tags","favState","randomFav","onToggle","setState","componentDidMount","fetch","then","response","json","datos","render","remove","e","element","target","removeFavs","elem","document","getElementById","parentNode","removeChild","map","option","name","width","backgroundColor","params","color","InputProps","type","list","id","listStyleType","process","env","PUBLIC_URL","icon","marginTop","clicked","onSelect"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAO,yBAAP;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AAGA,eAAe,MAAMC,SAAN,SAAwBP,KAAK,CAACQ,SAA9B,CAAwC;AACnDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAE,EADC;AAETC,MAAAA,QAAQ,EAAE,KAFD;AAGTC,MAAAA,SAAS,EAAE,EAHF;AAITC,MAAAA,IAAI,EAAE,EAJG;AAKTC,MAAAA,QAAQ,EAAE,KALD;AAMTC,MAAAA,SAAS,EAAE;AANF,KAAb;;AASA,SAAKC,QAAL,GAAgBL,QAAQ,IAAI;AACxB,WAAKM,QAAL,CAAc;AACVN,QAAAA;AADU,OAAd;AAGH,KAJD;AAKH;;AAGDO,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,KAAK,CAAC,mBAAD,CAAL,CACKC,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUG,KAAK,IAAI;AACX,WAAKN,QAAL,CAAc;AACVP,QAAAA,MAAM,EAAEa;AADE,OAAd;AAGH,KANL;AAQA,WAAO,KAAKd,KAAL,CAAWC,MAAlB;AACH;;AAGDc,EAAAA,MAAM,GAAG;AAEL,aAASC,MAAT,CAAgBC,CAAhB,EAAmB;AACf,YAAMC,OAAO,GAAGD,CAAC,CAACE,MAAlB;AACAD,MAAAA,OAAO,CAACF,MAAR,CAAeC,CAAf;AACH;;AAED,aAASG,UAAT,GAAsB;AAClB,UAAIC,IAAI,GAAGC,QAAQ,CAACC,cAAT,CAAwB,UAAxB,CAAX;AACAF,MAAAA,IAAI,CAACG,UAAL,CAAgBC,WAAhB,CAA4BJ,IAA5B;AACA,aAAO,KAAP;AACH;;AAGD,wBAEI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,YAAD;AACI,MAAA,EAAE,EAAC,gBADP;AAEI,MAAA,YAAY,MAFhB;AAGI,MAAA,OAAO,EAAE,KAAKrB,KAAL,CAAWC,MAAX,CAAkByB,GAAlB,CAAuBC,MAAD,IAAYA,MAAM,CAACC,IAAzC,CAHb;AAII,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAE,GAAR;AAAaC,QAAAA,eAAe,EAAE;AAA9B,OAJX;AAKI,MAAA,kBAAkB,MALtB;AAMI,MAAA,IAAI,EAAC,OANT;AAOI,MAAA,WAAW,EAAGC,MAAD,iBACT,oBAAC,SAAD,oBAAeA,MAAf;AACW,QAAA,KAAK,eAAE,oBAAC,UAAD;AAAY,UAAA,KAAK,EAAE;AAACC,YAAAA,KAAK,EAAE;AAAR,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADlB;AAEW,QAAA,OAAO,EAAC,UAFnB;AAGW,QAAA,UAAU,EAAE,EAAC,GAAGD,MAAM,CAACE,UAAX;AAAuBC,UAAAA,IAAI,EAAE;AAA7B,SAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SARR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,CADJ,eAmBI;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAnBJ,EAoBK,KAAKnC,KAAL,CAAWoC,IAAX,CAAgBT,GAAhB,CAAoBZ,KAAK,iBACtB,oBAAC,GAAD;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAkC,MAAA,EAAE,EAAC,UAArC;AAAgD,MAAA,OAAO,EAAEE,MAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAK,MAAA,EAAE,MAAP;AAAQ,MAAA,EAAE,EAAC,GAAX;AAAe,MAAA,GAAG,EAAEF,KAAK,CAACc,IAA1B;AAAgC,MAAA,EAAE,EAAC,kBAAnC;AAAsD,MAAA,KAAK,EAAC,QAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AACI,MAAA,SAAS,EAAC,oBADd;AAEI,MAAA,EAAE,EAAC,iBAFP;AAGI,MAAA,GAAG,EAAEd,KAAK,CAACsB,EAHf;AAII,MAAA,KAAK,EAAE;AAACC,QAAAA,aAAa,EAAE;AAAhB,OAJX;AAKI,MAAA,OAAO,EAAEjB,UALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAMI;AACI,MAAA,SAAS,EAAC,eADd;AAEI,MAAA,GAAG,EAAG,GAAEkB,OAAO,CAACC,GAAR,CAAYC,UAAW,aAAY1B,KAAK,CAAC2B,IAAK,EAF1D;AAGI,MAAA,GAAG,EAAE3B,KAAK,CAACc,IAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,eAWI;AAAG,MAAA,KAAK,EAAE;AAACc,QAAAA,SAAS,EAAE;AAAZ,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgC5B,KAAK,CAACc,IAAtC,CAXJ,CADJ,CADJ,CADH,CApBL,CADJ,eAyCI,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAC,aAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAGK,KAAK5B,KAAL,CAAWC,MAAX,CAAkByB,GAAlB,CAAsBZ,KAAK,iBAExB,oBAAC,GAAD;AAAK,MAAA,EAAE,MAAP;AAAQ,MAAA,EAAE,EAAC,GAAX;AAAe,MAAA,GAAG,EAAEA,KAAK,CAACsB,EAA1B;AAA8B,MAAA,SAAS,EAAC,sBAAxC;AAA+D,MAAA,KAAK,EAAC,QAArE;AACK,MAAA,OAAO,EAAE,MAAM,KAAKrC,KAAL,CAAW4C,OAAX,CAAmB7B,KAAnB,CADpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI;AAAK,MAAA,SAAS,EAAC,WAAf;AAA2B,MAAA,QAAQ,EAAE,KAAK8B,QAA1C;AAAoD,MAAA,EAAE,EAAC,WAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAM,MAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AACI,MAAA,QAAQ,EAAE,KAAKrC,QADnB;AAEI,MAAA,GAAG,EAAEO,KAAK,CAACc,IAFf;AAGI,MAAA,SAAS,EAAC,eAHd,CAII;AAJJ;AAKI,MAAA,GAAG,EAAG,GAAEU,OAAO,CAACC,GAAR,CAAYC,UAAW,aAAY1B,KAAK,CAAC2B,IAAK,EAL1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eASI;AAAM,MAAA,KAAK,EAAE;AAACC,QAAAA,SAAS,EAAE;AAAZ,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmC5B,KAAK,CAACc,IAAzC,CATJ,CAFJ,CAFH,CAHL,CADJ,CAzCJ,CAFJ;AAoEH;;AAnHkD","sourcesContent":["import React from \"react\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport Container from \"@material-ui/core/Container\";\nimport './components/styles.css';\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport TextField from \"@material-ui/core/TextField\";\nimport SearchIcon from '@material-ui/icons/Search';\n\n\nexport default class VoiceFavs extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            voices: [],\n            addToFav: false,\n            favorites: [],\n            tags: '',\n            favState: false,\n            randomFav: null\n        };\n\n        this.onToggle = addToFav => {\n            this.setState({\n                addToFav\n            });\n        };\n    }\n\n\n    componentDidMount() {\n        fetch(\"json/voices2.json\")\n            .then(response => response.json())\n            .then(datos => {\n                this.setState({\n                    voices: datos\n                });\n            });\n\n        return this.state.voices\n    }\n\n\n    render() {\n\n        function remove(e) {\n            const element = e.target;\n            element.remove(e);\n        }\n\n        function removeFavs() {\n            let elem = document.getElementById('favs-row');\n            elem.parentNode.removeChild(elem);\n            return false;\n        }\n\n\n        return (\n\n            <React.Fragment>\n                <Container>\n                    <Row className=\"header-content\">\n                        <div className=\"free-solo-2-demo\">\n                            <Autocomplete\n                                id=\"combo-box-demo\"\n                                autoComplete\n                                options={this.state.voices.map((option) => option.name)}\n                                style={{width: 300, backgroundColor: '#000000'}}\n                                includeInputInList\n                                size=\"small\"\n                                renderInput={(params) =>\n                                    <TextField {...params}\n                                               label={<SearchIcon style={{color: 'darkgrey'}}/>}\n                                               variant=\"outlined\"\n                                               InputProps={{...params.InputProps, type: 'search'}}\n                                    />}\n                            />\n                        </div>\n                    </Row>\n                    <h3 className=\"fav-title\">FAVOURITES VOICES</h3>\n                    {this.props.list.map(datos => (\n                        <Row className=\"voices-favs-list\" id=\"favs-row\" onClick={remove}>\n                            <Col xs lg=\"2\" key={datos.name} id=\"voices-favs-list\" align=\"center\">\n                                <li\n                                    className=\"col-sm-3 card-list\"\n                                    id=\"card-icon-image\"\n                                    key={datos.id}\n                                    style={{listStyleType: 'none'}}\n                                    onClick={removeFavs}>\n                                    <img\n                                        className=\"card-img-list\"\n                                        src={`${process.env.PUBLIC_URL}/imagenes/${datos.icon}`}\n                                        alt={datos.name}\n                                    />\n                                    <p style={{marginTop: '1rem'}}>{datos.name}</p>\n                                </li>\n                            </Col>\n                        </Row>\n                    ))}\n                </Container>\n                <Container className=\"container-1\">\n                    <Row>\n                        <h3 className=\"pro-title\">PRO VOICES</h3>\n\n                        {this.state.voices.map(datos => (\n\n                            <Col xs lg=\"2\" key={datos.id} className=\"col-sm-3 voices-list\" align=\"center\"\n                                 onClick={() => this.props.clicked(datos)}>\n                                <div className=\"card-list\" onSelect={this.onSelect} id=\"card-list\">\n                                    <span className=\"card-fav-img\"/>\n                                    <img\n                                        onToggle={this.onToggle}\n                                        alt={datos.name}\n                                        className=\"card-img-list\"\n                                        //onClick={() => this.props.clicked(datos)}\n                                        src={`${process.env.PUBLIC_URL}/imagenes/${datos.icon}`}\n                                    />\n                                    <span style={{marginTop: '1rem'}}>{datos.name}</span>\n                                </div>\n                            </Col>\n                        ))}\n                    </Row>\n                </Container>\n            </React.Fragment>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}