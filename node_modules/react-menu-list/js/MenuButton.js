"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf3 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _reactFloatAnchor = _interopRequireDefault(require("react-float-anchor"));

var _kefir = _interopRequireDefault(require("kefir"));

var _kefirBus = _interopRequireDefault(require("kefir-bus"));

var _fromEventsCapture = _interopRequireDefault(require("./lib/fromEventsCapture"));

var _setRef = _interopRequireDefault(require("./lib/setRef"));

var _MenuListInspector = _interopRequireDefault(require("./MenuListInspector"));

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var MenuButton =
/*#__PURE__*/
function (_React$Component) {
  (0, _inherits2["default"])(MenuButton, _React$Component);

  function MenuButton() {
    var _getPrototypeOf2;

    var _this;

    (0, _classCallCheck2["default"])(this, MenuButton);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = (0, _possibleConstructorReturn2["default"])(this, (_getPrototypeOf2 = (0, _getPrototypeOf3["default"])(MenuButton)).call.apply(_getPrototypeOf2, [this].concat(args)));
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "state", {
      opened: false
    });
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "_floatAnchorRef", _react["default"].createRef());
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "_anchorEl", null);
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "_onClose", (0, _kefirBus["default"])());
    return _this;
  }

  (0, _createClass2["default"])(MenuButton, [{
    key: "open",
    value: function open() {
      var _this2 = this;

      if (this.state.opened) return Promise.resolve();
      if (this.props.onWillOpen) this.props.onWillOpen(); // Clicking outside of the dropdown or pressing escape should close the
      // dropdown.

      _kefir["default"].merge([_kefir["default"].merge([(0, _fromEventsCapture["default"])(window, 'mousedown'), (0, _fromEventsCapture["default"])(window, 'focus')]).filter(function (e) {
        var el = _this2._anchorEl;
        var _iteratorNormalCompletion = true;
        var _didIteratorError = false;
        var _iteratorError = undefined;

        try {
          for (var _iterator = _reactFloatAnchor["default"].parentNodes(e.target)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var node = _step.value;
            if (node === el) return false;
          }
        } catch (err) {
          _didIteratorError = true;
          _iteratorError = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion && _iterator["return"] != null) {
              _iterator["return"]();
            }
          } finally {
            if (_didIteratorError) {
              throw _iteratorError;
            }
          }
        }

        return true;
      }), _kefir["default"].fromEvents(window, 'keydown').filter(function (e) {
        return e.key ? e.key === 'Escape' : e.which === 27;
      }).map(function (e) {
        e.preventDefault();
        e.stopPropagation();
      })]).takeUntilBy(this._onClose).onValue(function () {
        _this2.close();
      });

      return new Promise(function (resolve) {
        _this2.setState({
          opened: true
        }, function () {
          if (_this2.props.onDidOpen) _this2.props.onDidOpen();
          resolve();
        });
      });
    }
  }, {
    key: "close",
    value: function close() {
      if (!this.state.opened) return;
      if (this.props.onWillClose) this.props.onWillClose();
      this.setState({
        opened: false
      });

      this._onClose.emit();
    }
  }, {
    key: "toggle",
    value: function toggle() {
      if (this.state.opened) {
        this.close();
      } else {
        this.open();
      }
    }
  }, {
    key: "reposition",
    value: function reposition() {
      var floatAnchor = this._floatAnchorRef.current;
      if (!floatAnchor) throw new Error();
      floatAnchor.reposition();
    }
  }, {
    key: "_itemChosen",
    value: function _itemChosen() {
      this.close();
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this._onClose.emit();
    }
  }, {
    key: "render",
    value: function render() {
      var _this3 = this;

      var _this$props = this.props,
          children = _this$props.children,
          menu = _this$props.menu,
          positionOptions = _this$props.positionOptions,
          menuZIndex = _this$props.menuZIndex,
          disabled = _this$props.disabled,
          title = _this$props.title,
          ButtonComponent = _this$props.ButtonComponent;
      var opened = this.state.opened;
      var style = this.props.style;
      var className = this.props.className;

      if (opened) {
        if (this.props.openedStyle) {
          style = _objectSpread({}, style, {}, this.props.openedStyle);
        }

        if (this.props.openedClassName) {
          className = "".concat(className || '', " ").concat(this.props.openedClassName);
        }
      }

      return _react["default"].createElement(_reactFloatAnchor["default"], {
        parentElement: this.props.menuParentElement,
        ref: this._floatAnchorRef,
        options: positionOptions,
        zIndex: menuZIndex,
        anchor: function anchor(anchorRef) {
          return _react["default"].createElement(ButtonComponent, (0, _extends2["default"])({
            domRef: function domRef(el) {
              _this3._anchorEl = el;
              (0, _setRef["default"])(anchorRef, el);
            },
            type: "button",
            className: className,
            style: style,
            onMouseDown: function onMouseDown(e) {
              if (e.button !== 0) return;

              _this3.toggle();
            },
            onKeyPress: function onKeyPress(e) {
              if (e.key === 'Enter' || e.key === ' ') {
                _this3.toggle();
              }
            },
            "aria-haspopup": true,
            "aria-expanded": opened,
            disabled: disabled,
            title: title
          }, _this3.props.buttonProps), children);
        },
        "float": !opened ? null : _react["default"].createElement(_MenuListInspector["default"], {
          onItemChosen: function onItemChosen() {
            return _this3._itemChosen();
          }
        }, menu)
      });
    }
  }]);
  return MenuButton;
}(_react["default"].Component);

exports["default"] = MenuButton;
(0, _defineProperty2["default"])(MenuButton, "propTypes", {
  className: _propTypes["default"].string,
  style: _propTypes["default"].object,
  disabled: _propTypes["default"].bool,
  title: _propTypes["default"].string,
  openedClassName: _propTypes["default"].string,
  openedStyle: _propTypes["default"].object,
  positionOptions: _propTypes["default"].object,
  menuZIndex: _propTypes["default"].oneOfType([_propTypes["default"].string, _propTypes["default"].number]),
  ButtonComponent: _propTypes["default"].func,
  buttonProps: _propTypes["default"].object,
  children: _propTypes["default"].node,
  menu: _propTypes["default"].element,
  onWillOpen: _propTypes["default"].func,
  onDidOpen: _propTypes["default"].func,
  onWillClose: _propTypes["default"].func
});
(0, _defineProperty2["default"])(MenuButton, "defaultProps", {
  positionOptions: {
    position: 'bottom',
    hAlign: 'left'
  },
  ButtonComponent: function ButtonComponent(_ref) {
    var domRef = _ref.domRef,
        props = (0, _objectWithoutProperties2["default"])(_ref, ["domRef"]);
    return _react["default"].createElement("button", (0, _extends2["default"])({
      ref: domRef
    }, props));
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,